{"version":3,"file":"static/js/634.cb0f6a46.chunk.js","mappings":"uQAGaA,EAAaC,EAAAA,GAAAA,KAAH,4NAWVC,EAAgBD,EAAAA,GAAAA,OAAH,6WAiBbE,EAAkBF,EAAAA,GAAAA,MAAH,2PAcfG,EAAqBH,EAAAA,GAAAA,KAAH,6MAYlBI,EAAYJ,EAAAA,GAAAA,GAAH,4EAKTK,EAAYL,EAAAA,GAAAA,GAAH,wMAWTM,EAAYN,EAAAA,GAAAA,EAAH,iIAOTO,EAAQP,EAAAA,GAAAA,EAAH,oJAQLQ,GAAYR,EAAAA,EAAAA,IAAOS,EAAAA,GAAPT,CAAH,0J,iBCftB,EA1De,WACb,OAAsCU,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAAsCF,EAAAA,EAAAA,UAAS,IAA/C,eAAOG,EAAP,KAAoBC,EAApB,KAsBA,OACE,UAACC,EAAA,EAAD,CAAKC,GAAG,OAAR,WACE,UAACjB,EAAD,CAAYkB,SAnBK,SAAAC,GACnBA,EAAEC,iBACyB,KAAvBR,EAAYS,QAKhBR,EAAe,IACfE,EAAe,KACfO,EAAAA,EAAAA,IAAoBV,GAAaW,MAAK,SAAAC,GACpC,IAAMC,EAAUD,EAAME,QACtBX,GAAe,SAAAD,GACb,MAAM,GAAN,eAAWA,IAAX,OAA2BW,GAC5B,GACF,KAXCE,MAAM,UAYT,EAIG,WACE,SAACxB,EAAD,CACEyB,KAAK,OACLC,aAAa,MACbC,YAAY,gBACZC,SA5BkB,SAAAZ,GACxBN,EAAeM,EAAEa,OAAOC,MAAMC,cAC/B,KA4BK,SAAChC,EAAD,CAAe0B,KAAK,SAApB,UACE,SAACxB,EAAD,2BAIJ,SAACC,EAAD,UACGS,EAAYqB,KAAI,WAA2CC,GAA3C,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,GAAIC,EAAd,EAAcA,YAAaC,EAA3B,EAA2BA,aAA3B,OACf,UAAClC,EAAD,YACE,UAACG,EAAD,CAAWgC,GAAE,UAAKH,GAAMA,GAAIA,EAA5B,WACE,gBACEI,IAAG,yCAAoCH,GACvCI,MAAO,IACPC,IAAI,MAEN,SAACpC,EAAD,UAAQ6B,QAEV,UAAC9B,EAAD,4BACiB,IAAIsC,KAAKL,GAAcM,0BAV1BV,EADD,QAkBxB,C","sources":["components/Movies/Movies.styled.jsx","components/Movies/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const SearchForm = styled.form`\n  margin-top: 15px;\n  margin-bottom: 15px;\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: white;\n  border-radius: 3px;\n  overflow: hidden;\n`;\nexport const SearchFormBtn = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-color: orange;\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  &:hover {\n    opacity: 1;\n  }\n`;\nexport const SearchFormInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 5px;\n  padding-right: 5px;\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\nexport const SearchFormBtnLabel = styled.span`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`;\n\nexport const MovieList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n`;\nexport const MovieCard = styled.li`\n  display: flex;\n  flex-direction: column;\n  background-color: white;\n  max-width: 270px;\n  justify-content: space-between;\n  &:hover {\n    transform: scale(1.06);\n  }\n`;\n\nexport const MovieDesc = styled.p`\n  padding-left: 5px;\n  padding-right: 5px;\n  margin-top: 5px;\n  margin-bottom: 10px;\n  color: grey;\n`;\nexport const Title = styled.p`\n  font-size: 18px;\n  font-weight: 500;\n  color: black;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin-top: 10px;\n`;\nexport const TitleLink = styled(NavLink)`\n  /* font-size: 18px;\n  font-weight: 500;\n  color: black;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin-top: 10px; */\n`;\n","import { Box } from 'components/Box';\nimport { useState } from 'react';\nimport {\n  SearchForm,\n  SearchFormBtn,\n  SearchFormInput,\n  SearchFormBtnLabel,\n  MovieCard,\n  MovieList,\n  TitleLink,\n  MovieDesc,\n  Title,\n} from './Movies.styled';\nimport { fetchMoviesBySearch } from 'Services/Api';\n\nconst Movies = () => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchMovie, setSearchMovie] = useState([]);\n  const handleQueryChange = e => {\n    setSearchQuery(e.target.value.toLowerCase());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (searchQuery.trim() === '') {\n      alert('atatata');\n      return;\n    }\n\n    setSearchQuery('');\n    setSearchMovie([]);\n    fetchMoviesBySearch(searchQuery).then(movie => {\n      const newData = movie.results;\n      setSearchMovie(searchMovie => {\n        return [...searchMovie, ...newData];\n      });\n    });\n  };\n\n  return (\n    <Box as=\"main\">\n      <SearchForm onSubmit={handleSubmit}>\n        <SearchFormInput\n          type=\"text\"\n          autocomplete=\"off\"\n          placeholder=\"Search movies\"\n          onChange={handleQueryChange}\n        />\n        <SearchFormBtn type=\"submit\">\n          <SearchFormBtnLabel>Search</SearchFormBtnLabel>\n        </SearchFormBtn>\n      </SearchForm>\n\n      <MovieList>\n        {searchMovie.map(({ title, id, poster_path, release_date }, index) => (\n          <MovieCard key={index}>\n            <TitleLink to={`${id}`} id={id}>\n              <img\n                src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n                width={270}\n                alt=\"\"\n              />\n              <Title>{title}</Title>\n            </TitleLink>\n            <MovieDesc>\n              Release date: {new Date(release_date).toLocaleDateString()}\n            </MovieDesc>\n          </MovieCard>\n        ))}\n      </MovieList>\n    </Box>\n  );\n};\nexport default Movies;\n"],"names":["SearchForm","styled","SearchFormBtn","SearchFormInput","SearchFormBtnLabel","MovieList","MovieCard","MovieDesc","Title","TitleLink","NavLink","useState","searchQuery","setSearchQuery","searchMovie","setSearchMovie","Box","as","onSubmit","e","preventDefault","trim","fetchMoviesBySearch","then","movie","newData","results","alert","type","autocomplete","placeholder","onChange","target","value","toLowerCase","map","index","title","id","poster_path","release_date","to","src","width","alt","Date","toLocaleDateString"],"sourceRoot":""}